@import 'manifest';

:host {
  @include component;

  --tcs-visualizer-title-color: #{$color-slate-400};
  --tcs-visualizer-text-color: #{$color-slate-700};
  --tcs-visualizer-border-color: #{$color-slate-400};
  --tcs-visualizer-border-radius: 5px;
  --tcs-visualizer-viewer-height: 250px;

  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  border: 1px solid var(--tcs-visualizer-border-color);
  border-radius: var(--tcs-visualizer-border-radius);
  width: 100%;

  tcs-drawer {
    z-index: 100;
  }

  .documentViewer {
    position: relative;
    // You can't set the width of a flex item that use resize
    flex: 0 0 auto;
    // Resize control
    resize: horizontal;
    overflow-x: hidden;
    overflow-y: hidden;
    // Define as initial width
    width: 50%;
    // Limit the minimum width when resizing
    min-width: 200px;
    max-width: calc(100% - 200px);

    background: var(--tcs-visualizer-document-viewer-background-color);
    border-right: 1px solid var(--tcs-visualizer-border-color);
  }

  .dataViewer {
    position: relative;
    // Auto resize to fill the remaining space
    flex: 1 1 auto;
    .toolbar {
      position: relative;
      z-index: 2;
    }
    .viewers {
      position: relative;
      height: calc(100% - 35px);
      z-index: 1;
      .viewer {
        position: relative;
        overflow-y: scroll;
        &::before {
          position: absolute;
          pointer-events: none;
          top: 15px;
          right: 30px;
          color: var(--tcs-visualizer-title-color);
          font-weight: 700;
          font-size: 8px;
          text-transform: uppercase;
          letter-spacing: 1px;
          transition: color 0.2s ease;
          z-index: 10;
        }
        tcs-dropdown {
          position: absolute;
          top: 0;
          left: 0;
          z-index: 10;
        }
        &.translate {
          &::before {
            content: 'Translation';
          }
        }
        &.transcribe {
          &::before {
            content: 'Transcription';
          }
        }
        &.comment {
          &::before {
            content: 'Comment';
          }
        }
        &.text-size {
          &-s {
            .viewerContent {
              font-size: 12px;
            }
          }
          &-m {
            .viewerContent {
              font-size: 14px;
            }
          }
          &-l {
            .viewerContent {
              font-size: 16px;
            }
          }
          &-xl {
            .viewerContent {
              font-size: 18px;
            }
          }
          &-xxl {
            .viewerContent {
              font-size: 20px;
            }
          }
        }
        .viewerContent {
          font: {
            weight: 400;
            family: $font-default;
          }
          color: var(--tcs-editor-text-color);
          position: relative;
          padding: 40px 30px 30px;
          counter-set: line 0;
          &.hidden {
            display: none;
          }
          &.direction-rtl {
            direction: rtl;
            text-align: right;
            line {
              &::before {
                right: -20px;
                left: unset;
              }
            }
          }
          &.direction-ltr {
            direction: ltr;
            text-align: right;
          }
          div {
            display: inline;
          }
          // Custom tags
          line {
            position: relative;
            display: block;
            counter-increment: line;
            &, * { line-height: 2; }
            &::before {
              content: counter(line);
              position: absolute;
              left: -20px;
              top: 3px;
              display: block;
              text-align: right;
              color: var(--tcs-editor-line-number-color);
              font-size: .9em;
              font-weight: 700;
            }
          }
          // Text elements
          w {
            display: inline;
          }
          unclear,
          del:not([rend=erased]),
          h,
          space,
          seg,
          // supplied,
          pc,
          abbr {
            position: relative;
            &::before {
              @include shadow;
              z-index: 20;
              position: absolute;
              pointer-events: none;
              left: 50%;
              transform: translateX(-50%);
              bottom: 10px;
              background-color: white;
              padding: 2px 5px;
              border-radius: 5px;
              transition: bottom 0.2s ease;
              white-space: nowrap;
              text-emphasis: none;
              text-decoration: none;
              text-emphasis-color: none;
              color: var(--tcs-editor-tooltip-color);
            }
            &:hover {
              &::before {
                bottom: 20px;
              }
            }
          }
          unclear:hover::before {
            content: 'unclear: (' attr(reason) ')';
          }
          seg:hover::before {
            content: 'annotation: (' attr(type) ', ' attr(rend) ', ' attr(hand) ')';
          }
          // supplied:hover::before {
          //   content: 'reconstruction: (' attr(reason) ')';
          // }
          del:not([rend=erased]):hover::before {
            content: 'deleted: (' attr(rend) ')';
          }
          h:hover::before {
            content: 'highlighted: (' attr(rend) ')';
          }
          abbr:hover::before {
            content: 'abbreviation: (' attr(rend) ')';
          }
          space:hover::before {
            content: 'blank space: (' attr(value) attr(unit) ')';
          }
          pc:hover::before {
            content: 'punctuation';
          }

          seg {
            border: 1px solid var(--tcs-editor-text-element-border-color);
            background-color: var(--tcs-editor-text-element-background-color);
          }

          space {
            text-align: center;
            display: inline-block;
            width: 20px;
          }

          unclear[reason=legible_incomplete] {
            text-emphasis: circle;
          }

          unclear[reason=uncertain] {
            text-emphasis: open;
          }

          unclear[reason=faded] {
            text-emphasis: open;
            color: var(--tcs-editor-high-faded-text-color);
          }

          unclear[reason=background_noise] {
            text-emphasis: open;
            color: var(--tcs-editor-faded-text-color);
          }

          supplied {
            color: var(--tcs-editor-faded-text-color);
            &::before {
              color: var(--tcs-editor-text-color);
              display: inline;
              content: '[';
            }
            &::after {
              color: var(--tcs-editor-text-color);
              display: inline;
              content: ']';
            }
          }

          del[rend=erased] {
            color: var(--tcs-editor-faded-text-color);
            &::before {
              color: var(--tcs-editor-text-color);
              display: inline;
              content: '{';
            }
            &::after {
              color: var(--tcs-editor-text-color);
              display: inline;
              content: '}';
            }
          }

          del[rend=dotted] {
            text-emphasis: dot;
            text-emphasis-position: under;
          }

          del[rend=underline] {
            text-decoration: underline;
          }

          abbr {
            color: var(--tcs-editor-danger-text-color);
          }

          h[rend=enlarged],
          h[rend=bigger] {
            display: inline-block;
            font-size: 1.2em;
            margin: 0 .2ch;
            &:before {
              font-size: .85em;
            }
          }

          h[rend=supralinear],
          h[rend=displaced-above] {
            vertical-align: super;
          }

          h[rend=infralinear],
          h[rend=displaced-below] {
            vertical-align: sub;
          }

          h[rend=doted] {
            text-emphasis: dot;
            text-emphasis-position: under;
          }


          div.first {
            &[type="part"]::before {
              content: '[p]: ' attr(n) ' ';
            }
            &[type="chapter"]::before {
              content: '[c]: ' attr(n) ' ';
            }
            &::before {
              font-weight: 700;
              font-size: .85em;
            }
          }
          ab.first {
            &::before {
              content: '[ab]: ' attr(n) ' ';
              font-weight: 700;
              font-size: .85em;
            }
          }
          div.last {
            &[type="part"]::after {
              content: ' [/p]';
            }
            &[type="chapter"]::after {
              content: ' [/c]';
            }
            &::after {
              font-weight: 700;
              font-size: .85em;
            }
          }
          ab.last {
            &::after {
              content: ' [/ab]';
              font-weight: 700;
              font-size: .85em;
            }
          }
        }
      }
    }
  }
}

:host(.rows) {
  .dataViewer .viewers {
    .viewer {
      height: var(--tcs-visualizer-viewer-height);
      &:not(:last-child) {
        border-bottom: 1px solid var(--tcs-visualizer-border-color);
      }
    }
  }
}
:host(.columns) {
  .dataViewer .viewers {
    display: flex;
    flex-direction: row;
    .viewer {
      flex: 0 0 33.33%;
      height: calc(var(--tcs-visualizer-viewer-height) * 3);
      &:not(:last-child) {
        border-right: 1px solid var(--tcs-visualizer-border-color);
      }
    }
  }
}
:host(.mix) {
  .dataViewer .viewers {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    .viewer:first-child {
      flex: 0 0 50%;
      height: calc(var(--tcs-visualizer-viewer-height) * 2);
      border-right: 1px solid var(--tcs-visualizer-border-color);
    }
    .viewer:nth-child(2) {
      flex: 0 0 50%;
      height: calc(var(--tcs-visualizer-viewer-height) * 2);
    }
    .viewer:last-child {
      flex: 0 0 100%;
      height: var(--tcs-visualizer-viewer-height);
      border-top: 1px solid var(--tcs-visualizer-border-color);
    }
  }
}
:host(.rows.expand) {
  .dataViewer .viewers {
    .viewer {
      height: 33.33%;
    }
  }
}
:host(.columns.expand) {
  .dataViewer .viewers {
    .viewer {
      height: 100%;
    }
  }
}
:host(.mix.expand) {
  .dataViewer .viewers {
    .viewer:first-child {
      height: 66.66%;
    }
    .viewer:nth-child(2) {
      height: 66.66%;
    }
    .viewer:last-child {
      flex: 0 0 100%;
      height: 33.33%;
      border-top: 1px solid var(--tcs-visualizer-border-color);
    }
  }
}
:host(.expand) {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}
:host(:not(.documentViewerOpen)) {
  .documentViewer {
    display: none;
  }
}
